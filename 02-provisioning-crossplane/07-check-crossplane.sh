#!/usr/bin/env bash
set -euo pipefail

NAMESPACE="crossplane-system"

echo "üîç Verificando instala√ß√£o do Crossplane..."

# 1. Verifica se o deployment principal do Crossplane est√° pronto
if kubectl rollout status deployment/crossplane -n ${NAMESPACE} --timeout=60s; then
  echo "‚úÖ Crossplane core est√° pronto."
else
  echo "‚ùå Crossplane core com problemas."
  exit 1
fi

echo "üì¶ Verificando Providers instalados..."

# 2. Lista todos os providers instalados e verifica status
PROVIDERS=$(kubectl get providers.pkg.crossplane.io -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}')

for p in $PROVIDERS; do
  STATUS=$(kubectl get providers.pkg.crossplane.io $p -o jsonpath='{.status.conditions[?(@.type=="Healthy")].status}')
  INSTALLED=$(kubectl get providers.pkg.crossplane.io $p -o jsonpath='{.status.conditions[?(@.type=="Installed")].status}')
  
  if [[ "$STATUS" == "True" && "$INSTALLED" == "True" ]]; then
    echo "‚úÖ Provider '$p' est√° INSTALADO e HEALTHY."
  else
    echo "‚ùå Problema no Provider '$p' ‚Äî Installed: $INSTALLED, Healthy: $STATUS"
  fi
done

# 3. Verifica se os pods est√£o rodando no namespace do Crossplane
echo "üö¶ Checando pods em ${NAMESPACE}..."

NOT_READY=$(kubectl get pods -n ${NAMESPACE} --no-headers | grep -v 'Running\|Completed' || true)

if [[ -z "$NOT_READY" ]]; then
  echo "‚úÖ Todos os pods no namespace ${NAMESPACE} est√£o em bom estado."
else
  echo "‚ö†Ô∏è Alguns pods n√£o est√£o prontos:"
  echo "$NOT_READY"
fi

# 4. Verifica se h√° DeploymentRuntimeConfig aplicado
echo "üìò Verificando DeploymentRuntimeConfigs..."

DRCS=$(kubectl get deploymentruntimeconfigs.pkg.crossplane.io -o name || true)

if [[ -z "$DRCS" ]]; then
  echo "‚ö†Ô∏è Nenhum DeploymentRuntimeConfig encontrado."
else
  echo "‚úÖ Encontrado(s):"
  echo "$DRCS"
fi

echo ""
echo "‚úÖ Verifica√ß√£o conclu√≠da!"
